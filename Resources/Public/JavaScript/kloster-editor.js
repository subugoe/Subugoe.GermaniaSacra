// Generated by CoffeeScript 1.7.1
$(function() {
  $("#edit").hide().populate_selects();
  $("#edit textarea").autosize();
  $("fieldset .multiple").append("<div class=\"add-remove-buttons\"><button class=\"remove\">-</button><button class=\"add\">+</button></div>");
  $("fieldset .multiple button").click(function(e) {
    var div;
    e.preventDefault();
    div = $(this).closest(".multiple");
    if ($(this).hasClass("remove")) {
      return div.removeInputs(250);
    } else if ($(this).hasClass("add")) {
      return div.addInputs(250);
    }
  });
  $("input[type=url]").keyup(function() {
    return $(this).parent().next(".link").html($(this).val() ? '<a class="icon-link" href="' + $(this).val() + '" target="_blank"></a>' : '');
  });
  $("fieldset .multiple .remove").click();
  $(".togglable + .togglable").hide();
  $(".toggle").click(function(e) {
    e.preventDefault();
    return $(this).closest(".togglable").siblings(".togglable").addBack().slideToggle();
  });
  $(".new").click(function(e) {
    e.preventDefault();
    return $("#edit form").new_kloster();
  });
  $(".close").click(function(e) {
    e.preventDefault();
    $(this).parent().closest("div[id]").slideUp();
    return $("#browse").slideDown();
  });
  $("form.edit").submit(function(e) {
    var type;
    e.preventDefault();
    type = $(this).attr('id');
    if (type == null) {
      alert('Invalid type. Set form ID.');
      return;
    }
    $("select:disabled").prop("disabled", false).addClass("disabled");
    if (!$(this).find("[name=kloster_id]").val().length) {
      $(this).create(type);
    } else {
      $(this).update(type);
    }
    return $("select.disabled").prop("disabled", true);
  });
  $(window).bind("keydown", function(e) {
    if (e.ctrlKey || e.metaKey) {
      switch (String.fromCharCode(e.which).toLowerCase()) {
        case "s":
          e.preventDefault();
          return $(":submit:visible:last").click();
      }
    }
  });
});

$.fn.populate_selects = function() {
  var url;
  url = "getOptions";
  return $.getJSON(url, function(response) {
    var options;
    options = {};
    options.bearbeitungsstatus = response[0];
    options.personallistenstatus = response[1];
    options.band = response[2];
    options.literatur = response[3];
    options.bistum = response[4];
    options.orden = response[5];
    options.klosterstatus = response[6];
    options.bearbeiter = response[7];
    options.url_typ = response[8];
    return $.each(options, function(name, values) {
      var $select;
      $select = $("select[name=\"" + name + "\"], select[name=\"" + name + "[]\"]");
      $select.empty().append($("<option>", {
        value: "",
        text: ""
      }));
      return $.each(values, function(index, object) {
        return $.each(object, function(value, uuid) {
          return $select.append($("<option>", {
            value: uuid,
            text: value
          }));
        });
      });
    });
  });
};

$.fn.new_kloster = function() {
  $("#browse").slideUp();
  $("#edit").slideDown();
  $(this).clear_form();
  $(this).find(".autocomplete").autocomplete('ort');
  $(this).find("textarea").trigger("autosize.resize");
  return $(this).find("input[type=url]").keyup();
};

$.fn.create = function(type) {
  var $this;
  $this = $(this);
  if (type === 'kloster') {
    return $.post("create", $this.serialize()).done(function(respond, status, jqXHR) {
      $.get("solrUpdateWhenKlosterCreate", {
        uuid: respond
      });
      return $this.message('Ein neuer Eintrag wurde angelegt.');
    }).fail(function(jqXHR, textStatus) {
      $this.message('Error');
      return console.dir(jqXHR.responseText);
    });
  } else {
    return $.post("create" + ucfirst(type), $this.serialize()).done(function(respond, status, jqXHR) {
      return $this.message('Ein neuer Eintrag wurde angelegt.');
    }).fail(function(jqXHR, textStatus) {
      $this.message('Error');
      return console.dir(jqXHR.responseText);
    });
  }
};

$.fn.read = function(type, url) {
  var $this;
  $this = $(this);
  $this.clear_form();
  $("#browse").slideUp();
  $('#loading').show();
  return $.getJSON(url, function(obj) {
    var $fieldset, uuid;
    uuid = kloster.uuid;
    if (type === 'kloster') {
      $this.attr('action', 'update/' + uuid);
      $fieldset = $("#klosterdaten");
      $fieldset.find("label :input").each(function() {
        var name, val;
        name = $(this).attr("name");
        if (typeof name === "undefined") {
          return name = name.replace("[]", "");
        }
        if (name === 'changeddate' || name === 'creationdate') {
          val = obj[name] ? obj[name].date.substr(0, obj[name].date.indexOf(".")) : '';
        } else {
          val = obj[name];
        }
        return $(this).val(val);
      });
      $fieldset = $("#klosterorden");
      $.each(obj.klosterorden, function(index, value) {
        if (index > 0) {
          $fieldset.find(".multiple:last()").addInputs(0);
        }
        return $fieldset.find(".multiple:last() label :input").each(function() {
          var name;
          name = $(this).attr("name");
          if (typeof name === "undefined") {
            return;
          }
          name = name.replace("[]", "");
          return $(this).val(value[name]);
        });
      });
      $fieldset = $("#klosterstandorte");
      $.each(obj.klosterstandorte, function(index, value) {
        if (index > 0) {
          $fieldset.find(".multiple:last()").addInputs(0);
        }
        return $fieldset.find(".multiple:last() label :input").each(function() {
          var checkedCondition, disabledCondition, name, text, val;
          name = $(this).attr("name");
          if (typeof name === "undefined") {
            return;
          }
          name = name.replace("[]", "");
          val = value[name];
          if (name === "wuestung") {
            if (name === "wuestung") {
              checkedCondition = value[name] === 1;
              return $(this).prop("checked", checkedCondition);
            }
          } else if (name === "ort") {
            return $(this).html($("<option />", {
              value: value["uuid"],
              text: value["ort"]
            }).attr("selected", true));
          } else if (name === "bistum") {
            $(this).val(value[name]);
            text = $(this).find(':selected');
            disabledCondition = text !== "keine Angabe" && text !== "";
            return $(this).prop("disabled", disabledCondition);
          } else {
            return $(this).val(value[name]);
          }
        });
      });
      $fieldset = $("#links");
      $.each(obj.url, function(index, value) {
        if (value.url_typ_name === "GND") {
          $(":input[name=gnd]").val(value.url);
          return $(":input[name=gnd_label]").val(value.url_label);
        } else if (value.url_typ_name === "Wikipedia") {
          $(":input[name=wikipedia]").val(value.url);
          return $(":input[name=wikipedia_label]").val(value.url_label);
        } else {
          $fieldset.find(".multiple:last()").addInputs(0);
          return $fieldset.find(".multiple:last() label :input").each(function() {
            var name;
            name = $(this).attr("name");
            if (typeof name === "undefined") {
              return;
            }
            name = name.replace("[]", "");
            return $(this).val(value[name]);
          });
        }
      });
      $fieldset.find(".multiple:eq(0)").removeInputs(0);
      $fieldset = $("#literatur");
      $.each(obj.literatur, function(index, value) {
        if (index > 0) {
          $fieldset.addInputs(0);
        }
        return $fieldset.find(".multiple:last() label :input").each(function() {
          var name;
          name = $(this).attr("name");
          if (typeof name === "undefined") {
            return;
          }
          name = name.replace("[]", "");
          return $(this).val(value);
        });
      });
    } else {
      $this.attr('action', 'update' + ucfirst(type) + '/' + uuid);
    }
    $('#edit').slideDown();
    $('#loading').hide();
    $this.find(".autocomplete").autocomplete('ort');
    $this.find("input[type=url]").keyup();
    return $this.find("textarea").trigger("autosize.resize");
  });
};

$.fn.update = function(type) {
  var $this, url;
  $this = $(this);
  url = $this.attr("action");
  return $.post(url, $this.serialize()).done(function(respond, status, jqXHR) {
    return $.post("updateSolrAfterKlosterUpdate", {
      uuid: respond
    }).done(function(respond, status, jqXHR) {
      if (status === "success") {
        return $this.message('Ihre Ã„nderungen wurden gespeichert.');
      }
    }).fail(function(jqXHR, textStatus) {
      $this.message('Error');
      return console.dir(jqXHR.responseText);
    });
  }).fail(function(jqXHR, textStatus) {
    $this.message('Error');
    return console.dir(jqXHR.responseText);
  });
};
