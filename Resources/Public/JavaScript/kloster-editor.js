// Generated by CoffeeScript 1.7.1
$(function() {
  $("#edit").hide().populate_selects();
  $("#edit textarea").autosize();
  $("fieldset .multiple").append("<div class=\"add-remove-buttons\"><button class=\"remove\">-</button><button class=\"add\">+</button></div>");
  $("fieldset .multiple button").click(function(e) {
    var div;
    e.preventDefault();
    div = $(this).closest(".multiple");
    if ($(this).hasClass("remove")) {
      return div.removeInputs(250);
    } else if ($(this).hasClass("add")) {
      return div.addInputs(250);
    }
  });
  $("input[type=url]").keyup(function() {
    return $(this).parent().next(".link").html($(this).val() ? '<a class="icon-link" href="' + $(this).val() + '" target="_blank"></a>' : '');
  });
  $("fieldset .multiple .remove").click();
  $(".togglable + .togglable").hide();
  $(".toggle").click(function(e) {
    e.preventDefault();
    return $(this).closest(".togglable").siblings(".togglable").addBack().slideToggle();
  });
  $(".new").click(function(e) {
    e.preventDefault();
    return $("#edit_form").new_kloster();
  });
  $(".close").click(function(e) {
    e.preventDefault();
    $(this).parent().closest("div[id]").slideUp();
    return $("#browse").slideDown();
  });
  $("#edit_form").submit(function(e) {
    e.preventDefault();
    $("select:disabled").prop("disabled", false).addClass("disabled");
    if (!$(this).find("[name=kloster_id]").val().length) {
      $(this).create_kloster();
    } else {
      $(this).update_kloster();
    }
    return $("select.disabled").prop("disabled", true);
  });
  $(window).bind("keydown", function(e) {
    if (e.ctrlKey || e.metaKey) {
      switch (String.fromCharCode(e.which).toLowerCase()) {
        case "s":
          e.preventDefault();
          return $(":submit:visible:last").click();
      }
    }
  });
});

$.fn.populate_selects = function() {
  var url;
  url = "getOptions";
  return $.getJSON(url, function(response) {
    var options;
    options = {};
    options.bearbeitungsstatus = response[0];
    options.personallistenstatus = response[1];
    options.band = response[2];
    options.literatur = response[3];
    options.bistum = response[4];
    options.orden = response[5];
    options.klosterstatus = response[6];
    options.bearbeiter = response[7];
    options.url_typ = response[8];
    return $.each(options, function(name, values) {
      var $select;
      $select = $("select[name=\"" + name + "\"], select[name=\"" + name + "[]\"]");
      $select.empty().append($("<option>", {
        value: "",
        text: ""
      }));
      return $.each(values, function(index, object) {
        return $.each(object, function(value, uuid) {
          return $select.append($("<option>", {
            value: uuid,
            text: value
          }));
        });
      });
    });
  });
};
