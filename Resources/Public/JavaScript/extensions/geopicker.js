// Generated by CoffeeScript 1.7.1
$.fn.geopicker = function() {
  var geoJsonSrc, resourcePath;
  geoJsonSrc = '/proxy/geojson';
  resourcePath = '_Resources/Static/Packages/Subugoe.GermaniaSacra/';
  return $(':input', this).unbind('focus').focus((function(_this) {
    return function() {
      var $container, $map, baseMaps, icon, id, lat, layers, lng, map, marker, onMapClick, overlayMaps, scope;
      scope = $(_this);
      if ($('.map-container', scope).length > 0) {
        return false;
      }
      layers = [];
      layers.osm = L.tileLayer("http://{s}.tile.osm.org/{z}/{x}/{y}.png", {
        attribution: '&copy; <a href="http://osm.org/copyright">OpenStreetMap</a> contributors'
      });
      layers.esri = L.tileLayer("http://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}", {
        attribution: "Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community"
      });
      layers.thunderforest = L.tileLayer("http://{s}.tile.thunderforest.com/landscape/{z}/{x}/{y}.png", {
        attribution: '&copy; <a href="http://www.opencyclemap.org">OpenCycleMap</a>, &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, <a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>'
      });
      baseMaps = {
        "OpenStreetMap": layers.osm,
        "ESRI World Imagery": layers.esri,
        "Thunderforest Landscape": layers.thunderforest
      };
      overlayMaps = {};
      id = "map-" + (Math.random());
      console.dir(id);
      $map = $("<div id='" + id + "' class='map'/>").css({
        width: scope.width()
      });
      $container = $('<div class="map-container"><button class="close">&times;</button></div>').css({
        width: scope.width()
      }).prepend($map).appendTo(scope).slideDown();
      $('.close', $container).hide().click(function(e) {
        e.preventDefault();
        return $container.slideUp(null, function() {
          return $(this).remove();
        });
      });
      $('html').click(function() {
        return $('.close', $container).click();
      });
      scope.click(function(event) {
        return event.stopPropagation();
      });
      lat = parseFloat($('input[name$="breite[]"]', scope).val()) || 0;
      lng = parseFloat($('input[name$="laenge[]"]', scope).val()) || 0;
      map = L.map(id, {
        center: [(lat === 0 ? 51.163 : lat), (lng === 0 ? 10.448 : lng)],
        zoom: (lat === 0 && lng === 0 ? 6 : 18),
        maxZoom: 19,
        layers: layers
      });
      L.control.layers(baseMaps, overlayMaps).addTo(map);
      L.control.scale().addTo(map);
      map.invalidateSize();
      icon = L.icon({
        iconUrl: resourcePath + 'Images/marker-icon.png',
        shadowUrl: resourcePath + 'Images/marker-shadow.png',
        iconAnchor: [13, 41]
      });
      marker = L.marker([lat, lng], {
        icon: icon
      }).addTo(map);
      $('.leaflet-control-layers-base input:eq(0)', scope).click();
      map.on('click', onMapClick = function(e) {
        var doit;
        lat = e.latlng.lat.toFixed(6);
        lng = e.latlng.lng.toFixed(6);
        doit = confirm("Sollen die Koordinaten " + lat + ", " + lng + " Ã¼bernommen werden?");
        if (doit === true) {
          $(':input[name$="breite[]"]', scope).val(lat);
          $(':input[name$="laenge[]"]', scope).val(lng);
          return marker.setLatLng(e.latlng);
        }
      });
      return $.getJSON(geoJsonSrc).success(function(data) {
        var borders, style;
        style = {
          clickable: false,
          color: "#000",
          fillColor: "#000",
          weight: 1.5,
          opacity: 0.3,
          fillOpacity: 0.05
        };
        borders = L.geoJson(data, {
          style: style
        });
        return borders.addTo(map);
      });
    };
  })(this));
};
