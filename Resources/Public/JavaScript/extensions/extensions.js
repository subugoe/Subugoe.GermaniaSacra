// Generated by CoffeeScript 1.7.1
$.fn.appendSaveButton = function(messageId) {
  return this.each(function() {
    var $button;
    $button = $('<button/>', {
      disabled: 'disabled',
      type: 'submit',
      html: "<i class='icon-disk'></i> " + germaniaSacra.messages[messageId] + "</span>"
    });
    return $(this).append($button).append($('#csrf').clone().removeAttr('id'));
  });
};

$.fn.appendAddRemoveButtons = function() {
  return this.each(function() {
    $(this).append('<div class="add-remove-buttons"><span class="button remove">&minus;</span><span class="button add">+</span></div>');
    return $('.button', $(this)).click(function(e) {
      var div, doit;
      if (!$(this).hasClass('disabled')) {
        e.preventDefault();
        div = $(this).closest('.multiple');
        if ($(this).hasClass('remove')) {
          doit = confirm(germaniaSacra.messages.askRemove);
          if (doit) {
            return div.removeInputs(250);
          }
        } else if ($(this).hasClass('add')) {
          return div.addInputs(250);
        }
      }
    });
  });
};

$.fn.addInputs = function(slideTime) {
  if (slideTime == null) {
    slideTime = 0;
  }
  return this.each(function() {
    var $clone, $fieldset;
    $fieldset = $(this).closest('fieldset');
    $clone = $(this).clone(true);
    $clone.clearForm();
    $clone.find('select').autocomplete();
    $clone.find('.coordinates').geopicker();
    $clone.insertAfter($(this)).hide().slideDown(slideTime);
    return $fieldset.find('.remove').toggleClass('disabled', $fieldset.find('.multiple:not(.dying)').length === 1);
  });
};

$.fn.removeInputs = function(slideTime) {
  if (slideTime == null) {
    slideTime = 0;
  }
  return this.each(function() {
    var $fieldset;
    $fieldset = $(this).closest('fieldset');
    $fieldset.find('.multiple').length > 1 && $(this).addClass('dying').slideUp(slideTime, this.remove);
    return $fieldset.find('.remove').toggleClass('disabled', $fieldset.find('.multiple:not(.dying)').length === 1);
  });
};

$.fn.clearForm = function() {
  return this.each(function() {
    var $form, value, _i, _len, _ref;
    $form = $(this);
    $form.find('label').removeClass('dirty');
    $form.find(':input').prop('disabled', false);
    $form.find(':input:not([name=__csrfToken]):not(:checkbox):not(:submit)').val([]);
    $form.find('select.ajax option').remove();
    $form.find(':checkbox, :radio').prop('checked', false);
    _ref = germaniaSacra.notSpecifiedValues;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      value = _ref[_i];
      $form.find("select option:contains('" + value + "')").prop('selected', true);
    }
    $form.find('.default-select-first').each(function() {
      return $(this)[0].selectedIndex = 0;
    });
    $form.find('.multiple:gt(0)').removeInputs();
    $form.find('.map-container').remove();
    return $form.find('button.remove').prop('disabled', true);
  });
};
