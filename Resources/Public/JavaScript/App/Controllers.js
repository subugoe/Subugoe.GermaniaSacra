// Generated by CoffeeScript 1.7.1
var init, s_loading;

germaniaSacra.controller('listController', function($scope) {
  return $scope.$watch((function() {
    return $('#list').data('type');
  }), (function(newval, oldval) {
    if (newval != null) {
      return init();
    }
  }), true);
});

s_loading = '<i class="spinner spinner-icon"></i> Wird geladen&hellip;';

init = function() {
  var type;
  type = $('#list').data('type');
  $('#message').hide();
  if (type == null) {
    alert('There has to be at least one <section> with data-type set.');
    return;
  }
  $('form').append($('#csrf').clone().removeAttr('id'));
  initSearch();
  initList(type);
  initEditor(type);
  $("fieldset .multiple").append("<div class='add-remove-buttons'><button class='remove'>-</button><button class='add'>+</button></div>");
  $("fieldset .multiple button").click(function(e) {
    var div;
    e.preventDefault();
    div = $(this).closest(".multiple");
    if ($(this).hasClass("remove")) {
      return div.removeInputs(250);
    } else if ($(this).hasClass("add")) {
      return div.addInputs(250);
    }
  });
  $(".new").click(function(e) {
    e.preventDefault();
    return newAction();
  });
  $(window).bind("keydown", function(e) {
    if (e.ctrlKey || e.metaKey) {
      switch (String.fromCharCode(e.which).toLowerCase()) {
        case "s":
          e.preventDefault();
          return $(":submit[type=submit]:visible:last").click();
      }
    }
  });
  $(".togglable + .togglable").hide();
  return $(".toggle").click(function(e) {
    e.preventDefault();
    return $(this).closest(".togglable").siblings(".togglable").addBack().slideToggle();
  });
};
