// Generated by CoffeeScript 1.7.1
germaniaSacra.controller('listController', function($scope, $http, DTOptionsBuilder, DTColumnBuilder) {
  var entityName;
  entityName = $('section[ng-controller]').attr('id');
  $scope.ths = angular.element('th');
  $scope.entities = {};
  $scope.updated = {};
  $scope.newCount = 0;
  $scope.dtOptions = DTOptionsBuilder.fromSource('/entity/' + entityName).withDOM('lifpt').withLanguage({
    sUrl: '/_Resources/Static/Packages/Subugoe.GermaniaSacra/JavaScript/DataTables/German.json'
  }).withOption('fnDrawCallback', function() {
    var $trs, entity, id, _i, _len, _ref;
    _ref = $scope.dataTables.context[0].aoData;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      entity = _ref[_i];
      id = entity._aData.uUID ? entity._aData.uUID : 'new' + ++$scope.newCount;
      $scope.entities[id] = entity._aData;
    }
    $trs = angular.element('tbody tr:not(.processed)');
    $trs.each(function() {
      id = $(this).find('td:eq(0)').text();
      return $(this).attr('id', id ? id : 'new' + $scope.newCount);
    });
    $trs.children().each(function() {
      var $input, $th, name;
      $th = $scope.ths.eq($(this).index());
      if ($th.length) {
        name = $th.data('name');
        $input = $('<' + $th.data('input') + '/>').attr({
          name: name
        });
        $input.change(function() {
          var $checkbox, uUID;
          uUID = $(this).closest('tr').attr('id');
          $checkbox = $(this).closest('tr').find(':checkbox:eq(0)');
          if ($(this).attr('name') !== 'uUID') {
            $scope.entities[uUID][name] = $(this).val();
            $checkbox.prop('checked', true);
            $(this).closest('td').addClass('dirty');
          }
          return $scope.updated[uUID] = $checkbox.prop('checked');
        });
        return $(this).html($input.val($(this).text()));
      }
    });
    return $trs.addClass('processed');
  }).withOption('stateSave', true);
  $scope.dtColumns = [];
  $scope.ths.each(function(index, th) {
    return $scope.dtColumns.push(DTColumnBuilder.newColumn($(th).data('name')).withTitle($(th).text()));
  });
  $scope.$on('event:dataTableLoaded', function(event, loadedDT) {
    return $scope.dataTables = loadedDT.dt;
  });
  $scope["new"] = function($event) {
    var data;
    $event.preventDefault();
    data = {};
    $scope.ths.each(function(index, th) {
      return data[$(th).data('name')] = null;
    });
    return $scope.dataTables.row.add(data).draw();
  };
  return $scope.update = function() {
    var id, newEntities, updatedEntities, value, _ref;
    updatedEntities = {};
    newEntities = {};
    _ref = $scope.updated;
    for (id in _ref) {
      value = _ref[id];
      if (value) {
        if (id.substr(0, 3) === 'new') {
          newEntities[id] = $scope.entities[id];
        } else {
          updatedEntities[id] = $scope.entities[id];
        }
      }
    }
    updatedEntities.__csrfToken = $('#__csrfToken').val();
    newEntities.__csrfToken = updatedEntities.__csrfToken;
    return $http.post('subugoe.germaniasacra/' + entityName + '/listupdate', updatedEntities).error(function(data) {
      return $scope.message = 'ERROR';
    }).success(function(data) {
      if (newEntities) {
        return $http.post('subugoe.germaniasacra/' + entityName + '/listnew', newEntities).error(function(data) {
          return $scope.message = 'ERROR';
        }).success(function(data) {
          return $scope.message = 'Änderungen gespeichert.';
        });
      } else {
        return $scope.message = 'Änderungen gespeichert.';
      }
    });
  };
});
