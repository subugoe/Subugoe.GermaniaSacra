// Generated by CoffeeScript 1.7.1
germaniaSacra.controller('listController', function($scope, $http, DTOptionsBuilder, DTColumnBuilder) {
  var entityName, responsePromise;
  entityName = $('section[ng-controller]').attr('id');
  $scope.entities = {};
  responsePromise = $http.get('/entity/' + entityName);
  responsePromise.success(function(data, status, headers, config) {
    return $scope.entities = data;
  });
  responsePromise.error(function(data, status, headers, config) {
    return $scope.message = 'Daten konnten nicht geladen werden';
  });
  $scope.dtOptions = DTOptionsBuilder.newOptions().withDOM('lifpt').withLanguage({
    sUrl: '/_Resources/Static/Packages/Subugoe.GermaniaSacra/JavaScript/DataTables/German.json'
  }).withOption('fnCreatedRow', function() {
    return $(this).find(':input:not(.processed)').each(function() {
      $('<span class="val"/>').text($(this).is("select") ? $(this).find(":selected").text() : $(this).val()).hide().insertBefore($(this));
      return $(this).addClass('processed');
    });
  }).withOption("rowCallback", function(nRow, aData, iDisplayIndex, iDisplayIndexFull) {
    $(":input:gt(0)", nRow).bind("change", function() {
      $(this).closest('td').addClass('dirty');
      return $scope.$apply(function() {
        return $scope.entities[nRow._DT_RowIndex].selected = true;
      });
    });
    return nRow;
  });
  return $scope.update = function() {
    var changes, entity, _i, _len, _ref;
    changes = {};
    _ref = $scope.entities;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      entity = _ref[_i];
      if (entity.selected) {
        changes[entity.uUID] = entity;
      }
    }
    changes.__csrfToken = $('#__csrfToken').val();
    return $http.post('subugoe.germaniasacra/' + entityName + '/listupdate', changes).error(function(data) {
      return $scope.message = 'ERROR';
    }).success(function(data) {
      return $scope.message = 'Ã„nderungen gespeichert.';
    });
  };
});
