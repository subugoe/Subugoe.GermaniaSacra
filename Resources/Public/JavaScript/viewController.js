// Generated by CoffeeScript 1.7.1
var init_view;

init_view = function() {
  var type;
  type = $('#content section:first').attr('id');
  $('form').append($(':input.csrf').html());
  populateListAction(type);
  $("#list form").submit(function(e) {
    e.preventDefault();
    if ($("input[name^='uuid']:checked").length === 0) {
      $(this).message("WÃ¤hlen Sie bitte mindestens einen Eintrag aus.");
      return false;
    }
    return updateListAction(type);
  });

  /* Kloster editor */
  populateSelectsAction(type);
  $("#edit textarea").autosize();
  $('#edit').hide();
  $("fieldset .multiple").append("<div class=\"add-remove-buttons\"><button class=\"remove\">-</button><button class=\"add\">+</button></div>");
  $("fieldset .multiple button").click(function(e) {
    var div;
    e.preventDefault();
    div = $(this).closest(".multiple");
    if ($(this).hasClass("remove")) {
      return div.removeInputs(250);
    } else if ($(this).hasClass("add")) {
      return div.addInputs(250);
    }
  });
  $("input[type=url]").keyup(function() {
    return $(this).parent().next(".link").html($(this).val() ? '<a class="icon-link" href="' + $(this).val() + '" target="_blank"></a>' : '');
  });
  $("fieldset .multiple .remove").click();
  $(".togglable + .togglable").hide();
  $(".toggle").click(function(e) {
    e.preventDefault();
    return $(this).closest(".togglable").siblings(".togglable").addBack().slideToggle();
  });
  $(".new").click(function(e) {
    e.preventDefault();
    return newAction();
  });
  $(".close").click(function(e) {
    e.preventDefault();
    $(this).parent().closest("div[id]").slideUp();
    return $("#list").slideDown();
  });
  $("#edit form").submit(function(e) {
    e.preventDefault();
    type = $(this).closest('section').attr('id');
    if (type == null) {
      alert('Invalid type. Set form ID.');
      return;
    }
    $("select:disabled").prop("disabled", false).addClass("disabled");
    if (!$(this).find("[name=kloster_id]").val().length) {
      createAction(type);
    } else {
      updateAction(type);
    }
    return $("select.disabled").prop("disabled", true);
  });
  return $(window).bind("keydown", function(e) {
    if (e.ctrlKey || e.metaKey) {
      switch (String.fromCharCode(e.which).toLowerCase()) {
        case "s":
          e.preventDefault();
          return $(":submit:visible:last").click();
      }
    }
  });
};
