// Generated by CoffeeScript 1.7.1
var message, ucfirst;

message = function(text, withTimestampAndCloseButton) {
  var $close, $message, date, timestamp;
  if (withTimestampAndCloseButton == null) {
    withTimestampAndCloseButton = true;
  }
  $message = $('#message');
  date = new Date();
  timestamp = withTimestampAndCloseButton ? "<span class='timestamp'>" + (date.toLocaleString()) + "</span>" : '';
  text = "<span class='text'>" + text + "</span>";
  $message.hide().html(timestamp + text).slideDown();
  if (withTimestampAndCloseButton) {
    $close = $("<i class='hover close icon-close right'>&times;</i>");
    $close.appendTo($message).click(function(e) {
      e.preventDefault();
      return $message.slideUp();
    });
  }
  return $('html, body').animate({
    scrollTop: $message.offset().top
  });
};

ucfirst = function(string) {
  return string.charAt(0).toUpperCase() + string.slice(1);
};

$.fn.addInputs = function(slideTime) {
  if (slideTime == null) {
    slideTime = 0;
  }
  return this.each(function() {
    var $clone, $fieldset;
    $fieldset = $(this).closest("fieldset");
    $clone = $(this).clone(true);
    $clone.clearForm();
    $clone.find("select.autocomplete").autocomplete();
    $clone.insertAfter($(this)).hide().slideDown(slideTime);
    return $fieldset.find("button.remove").prop("disabled", $fieldset.find(".multiple:not(.dying)").length === 1);
  });
};

$.fn.removeInputs = function(slideTime) {
  if (slideTime == null) {
    slideTime = 0;
  }
  return this.each(function() {
    var $fieldset;
    $fieldset = $(this).closest("fieldset");
    $fieldset.find(".multiple").length > 1 && $(this).addClass("dying").slideUp(slideTime, this.remove);
    return $fieldset.find("button.remove").prop("disabled", $fieldset.find(".multiple:not(.dying)").length === 1);
  });
};

$.fn.clearForm = function() {
  return this.each(function() {
    $(this).find("label").removeClass('dirty');
    $(this).find(":input").prop("disabled", false);
    $(this).find(":input:not([name=__csrfToken]):not(:checkbox):not(:submit)").val('');
    $(this).find(":checkbox, :radio").prop("checked", false);
    $(this).find(".multiple:gt(0)").removeInputs();
    return $(this).find("button.remove").prop('disabled', true);
  });
};
